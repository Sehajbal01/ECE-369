`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 10/22/2024 11:09:48 AM
// Design Name: 
// Module Name: ALUControl
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module ALUControl(Instruction, ALUOp, ALUControl);
    input [31:0] Instruction;
    input [1:0] ALUOp;
    output reg [3:0] ALUControl;
    
    always @(*) begin
    case (ALUOp)
        2'b00: ALUControl = 0000;
        2'b01: ALUControl = 0010;
        default: ALUControl = 1111;
    endcase
    
    case (Instruction[5:0])
        6'b100001: ALUControl = 4'b0000;
        6'b100001: ALUControl = 4'b0000;  // Add
        6'b100001: ALUControl = 4'b0001;  // Add Immediate
        6'b100010: ALUControl = 4'b0010;  // Subtract
        6'b100011: ALUControl = 4'b0011;  // Multiply
        6'b100100: ALUControl = 4'b0100;  // And
        6'b100101: ALUControl = 4'b0101;  // And immediate
        6'b100110: ALUControl = 4'b0110;  // Or
        6'b100111: ALUControl = 4'b0111;  // Not Or (NOR)
        6'b101000: ALUControl = 4'b1000;  // Exclusive Or (XOR)
        6'b101001: ALUControl = 4'b1001;  // Or immediate
        6'b101010: ALUControl = 4'b1010;  // Exclusive Or immediate
        6'b101011: ALUControl = 4'b1011;  // Shift left logical
        6'b101100: ALUControl = 4'b1100;  // Shift right logical
        6'b101101: ALUControl = 4'b1101;  // Set on less than
        6'b101110: ALUControl = 4'b1110;  // Set on less than immediate
    endcase
    end
    
    
endmodule
