`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 10/22/2024 11:09:48 AM
// Design Name: 
// Module Name: ALUControl
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module ALUControl(Instruction, ALUOp, ALUControl);
    input [31:0] Instruction;
    input [3:0] ALUOp;
    output reg [4:0] ALUControl;
    
    always @(*) begin
    case (ALUOp)
        4'b0000: ALUControl = 5'b00000; //all storing and loading instructions
        
        
        4'b0001: ALUControl = 5'b01111; //beq
        4'b0011: ALUControl = 5'b10000; //bne
        4'b0100: ALUControl = 5'b10001; //bgtz
        4'b0101: ALUControl = 5'b10010; //blez
        4'b0110: ALUControl = 5'b10011; //bgez and bltz
        
        4'b0010: begin
            case (Instruction[5:0])
                6'b100001: ALUControl = 5'b00000;
                6'b100001: ALUControl = 5'b00000;  // Add
                6'b100001: ALUControl = 5'b00001;  // Add Immediate
                6'b100010: ALUControl = 5'b00010;  // Subtract
                6'b100011: ALUControl = 5'b00011;  // Multiply
                6'b100100: ALUControl = 5'b00100;  // And
                6'b100101: ALUControl = 5'b00101;  // And immediate
                6'b100110: ALUControl = 5'b00110;  // Or
                6'b100111: ALUControl = 5'b00111;  // Not Or (NOR)
                6'b101000: ALUControl = 5'b01000;  // Exclusive Or (XOR)
                6'b101001: ALUControl = 5'b01001;  // Or immediate
                6'b101010: ALUControl = 5'b01010;  // Exclusive Or immediate
                6'b101011: ALUControl = 5'b01011;  // Shift left logical
                6'b101100: ALUControl = 5'b01100;  // Shift right logical
                6'b101101: ALUControl = 5'b01101;  // Set on less than
                6'b101110: ALUControl = 5'b01110;  // Set on less than immediate
                default: ALUControl = 5'b11111;
            endcase
        end
        
        default: ALUControl = 5'b11111;
     endcase
    
   
     end
    
    
endmodule
